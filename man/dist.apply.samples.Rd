% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distApplySamples.R
\name{dist.apply.samples}
\alias{dist.apply.samples}
\title{Build Distance Matrix Data based on Per-Index Sampling}
\usage{
dist.apply.samples(X, FUN = distance.euclidean, sampler = identity,
  aggregate = mean, FUN.VALUE = +Inf, cores = 1L)
}
\arguments{
\item{X}{the list or vector of elements to be compared}

\item{FUN}{the distance function, a function accepting two \emph{samples} and
returning one distance value}

\item{sampler}{the sampling function, returning a vector or list of samples
for an element of \code{X}}

\item{aggregate}{the aggregation function which will join distances computed
with \code{FUN} of all combinations of the samples from two elements of
\code{X} into a single value}

\item{FUN.VALUE}{the value to be used for situations where an element of
\code{X} contains no samples}

\item{cores}{the number of cores to be used for parallel computation}
}
\value{
a vector of values that can be used to produce a distance matrix
}
\description{
Build the data for a distance matrix by comparing the elements
  from a vector or list \code{X}. Here, \code{X} can be a list of lists or a
  list of objects. Each element of \code{X} is passed to a sampler function
  \code{sampler} which will return the "samples" for that element. These
  samples are the actual values passed to the distance function \code{FUN}:
  If we want to compute the distance between two elements \code{a} and
  \code{b} from \code{X}, then what we do is first computing
  \code{sa=sampler(a)} and \code{sb=sampler(b)}. \code{sa} and \code{sb}
  should be lists or vectors. We then go through all combinations of the
  elements in \code{sa} and \code{sb} and pass them to \code{FUN}, one after
  the other. The results of these \code{length(sa) * length(sb)} computations
  are finally passed to \code{aggregate} as vector. The result of
  \code{aggregate} is then the distance between \code{a} and \code{b}.
}
\seealso{
dist.apply

dist.create
}
